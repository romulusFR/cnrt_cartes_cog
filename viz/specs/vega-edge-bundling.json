{
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "description": "A network diagram of software dependencies, with edges grouped via hierarchical edge bundling.",
    "padding": 5,
    "width": 2048,
    "height": 2048,
    "autosize": "pad",

    "signals": [
        {
            "name": "max_depth",
            "value": 2,
            "bind": { "input": "range", "min": 0, "max": 4, "step": 1 }
        },
        {
            "name": "threshold",
            "value": 2.0,
            "bind": { "input": "range", "min": 0.0, "max": 50.0, "step": 0.5 }
        },
        {
            "name": "tension",
            "value": 0.80,
            "bind": { "input": "range", "min": 0, "max": 1, "step": 0.01 }
        },
        {
            "name": "radius",
            "value": 384,
            "bind": { "input": "range", "min": 64, "max": 1024 }
        },
        {
            "name": "extent",
            "value": 360
        },
        {
            "name": "rotate",
            "value": 0,
            "bind": { "input": "range", "min": 0, "max": 360, "step": 1 }
        },
        {
            "name": "textSize",
            "value": 10,
            "bind": { "input": "range", "min": 4, "max": 32, "step": 1 }
        },
        {
            "name": "textOffset",
            "value": 2,
            "bind": { "input": "range", "min": 0, "max": 40, "step": 1 }
        },
        {
            "name": "layout",
            "value": "cluster",
            "bind": { "input": "radio", "options": ["tidy", "cluster"] }
        },
        { "name": "colorIn", "value": "forestgreen" },
        { "name": "colorOut", "value": "forestgreen" },
        { "name": "originX", "update": "width / 2" },
        { "name": "originY", "update": "height / 2" },
        {
            "name": "active",
            "value": null,
            "on": [
                { "events": "text:mouseover", "update": "datum.id" },
                { "events": "mouseover[!event.item]", "update": "null" }
            ]
        }
    ],

    "data": [
        {
            "name": "tree",
            "url": "data/thesaurus.json",
            "transform": [
                { "type": "filter", "expr": "datum.depth <= max_depth" },
                {
                    "type": "stratify",
                    "key": "id",
                    "parentKey": "parent"
                },
                {
                    "type": "tree",
                    "method": { "signal": "layout" },
                    "size": [1, 1],
                    "as": ["alpha", "beta", "c_depth", "children"]
                },
                {
                    "type": "formula",
                    "expr": "(rotate + extent * datum.alpha + 270) % 360",
                    "as": "angle"
                },
                {
                    "type": "formula",
                    "expr": "inrange(datum.angle, [90, 270])",
                    "as": "leftside"
                },
                {
                    "type": "formula",
                    "expr": "originX + radius * datum.beta * cos(PI * datum.angle / 180)",
                    "as": "x"
                },
                {
                    "type": "formula",
                    "expr": "originY + radius * datum.beta * sin(PI * datum.angle / 180)",
                    "as": "y"
                }
            ]
        },
        {
            "name": "leaves",
            "source": "tree",
            "transform": [
                {
                    "type": "filter",
                    "expr": "!datum.children"
                }
            ]
        },
        {
            "name": "dependencies",
            "url": "data/matrix_inverse.json",

            "transform": [
                {
                    "type": "filter",
                    "expr": "datum.weight >= threshold && max_depth <= datum.depth && datum.depth <= max_depth"
                },
                {
                    "type": "formula",
                    "expr": "treePath('tree', datum.src, datum.dst)",
                    "as": "treepath",
                    "initonly": true
                }
            ]
        },
        {
            "name": "selected",
            "source": "dependencies",
            "transform": [
                {
                    "type": "filter",
                    "expr": "datum.src === active || datum.dst === active"
                }
            ]
        }
    ],

    "marks": [
        {
            "type": "text",
            "from": { "data": "leaves" },
            "encode": {
                "enter": {
                    "text": { "field": "name" },
                    "baseline": { "value": "middle" }
                },
                "update": {
                    "x": { "field": "x" },
                    "y": { "field": "y" },
                    "dx": { "signal": "textOffset * (datum.leftside ? -1 : 1)" },
                    "angle": { "signal": "datum.leftside ? datum.angle - 180 : datum.angle" },
                    "align": { "signal": "datum.leftside ? 'right' : 'left'" },
                    "fontSize": { "signal": "textSize" },
                    "fontWeight": [
                        { "test": "indata('selected', 'src', datum.id)", "value": "bold" },
                        { "test": "indata('selected', 'dst', datum.id)", "value": "bold" },
                        { "value": null }
                    ],
                    "fill": [
                        { "test": "datum.id === active", "value": "black" },
                        { "test": "indata('selected', 'src', datum.id)", "signal": "colorIn" },
                        { "test": "indata('selected', 'dst', datum.id)", "signal": "colorOut" },
                        { "value": "black" }
                    ]
                }
            }
        },
        {
            "type": "group",
            "from": {
                "facet": {
                    "name": "path",
                    "data": "dependencies",
                    "field": "treepath"
                }
            },
            "marks": [
                {
                    "type": "line",
                    "interactive": false,
                    "from": { "data": "path" },
                    "transform": [
                        {
                            "type": "formula",
                            "expr": "datum.weight * 1",
                            "as": "strokeWidth"
                        }
                    ],
                    "encode": {
                        "enter": {
                            "interpolate": { "value": "bundle" },
                            "strokeWidth": { "field": "strokeWidth" }
                        },
                        "update": {
                            "stroke": [
                                { "test": "parent.src === active", "signal": "colorOut" },
                                { "test": "parent.dst === active", "signal": "colorIn" },
                                { "value": "steelblue" }
                            ],
                            "strokeOpacity": [
                                { "test": "parent.src === active || parent.dst === active", "value": 1 },
                                { "value": 0.2 }
                            ],
                            "tension": { "signal": "tension" },
                            "x": { "field": "x" },
                            "y": { "field": "y" }
                        }
                    }
                }
            ]
        }
    ]
}
